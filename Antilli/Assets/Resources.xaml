<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <SolidColorBrush x:Key="atDark_fg" Color="#FFC8C8C8"/>
  <SolidColorBrush x:Key="atDark_bgLight" Color="#43000000"/>
  <SolidColorBrush x:Key="atDark_bgDark" Color="#48000000"/>
  <SolidColorBrush x:Key="atDark_bgDarkHighlight" Color="#12FFFFFF"/>
  <SolidColorBrush x:Key="atDark_bgDarkActive" Color="#04FFFFFF"/>
  <SolidColorBrush x:Key="atDark_bgDarkActiveHighlight" Color="#16FFFFFF"/>
  <SolidColorBrush x:Key="atDark_border" Color="Gold" />
  <SolidColorBrush x:Key="atDark_borderHighlight" Color="LightGray" />
  
  <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
    <Setter Property="Background" Value="{StaticResource atDark_bgDark}"/>
    <Setter Property="BorderBrush" Value="Gold"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Border.CornerRadius" Value="0"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
    <Setter Property="Height" Value="22"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="mainBorder"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter ContentSource="Content"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource atDark_bgDarkHighlight}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource atDark_bgDarkActive}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource atDark_bgDark}"/>
    <Setter Property="BorderBrush" Value="Gold"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Border.CornerRadius" Value="0"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
    <Setter Property="Height" Value="22"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border x:Name="mainBorder"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter ContentSource="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{StaticResource atDark_bgDarkHighlight}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{StaticResource atDark_bgDarkActive}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Background" Value="#28FFFFFF"/>
              <Setter Property="BorderBrush" Value="{StaticResource atDark_fg}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#16FFFFFF"/>
              <Setter Property="BorderBrush" Value="#16FFFFFF"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="#32FFFFFF"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="Border">
    <Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
  </Style>
  
  <Style TargetType="TextBox">
    <Setter Property="Background" Value="{StaticResource atDark_bgLight}"/>
    <Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
    <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Padding="2">
            <ScrollViewer Margin="0"
                          x:Name="PART_ContentHost" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource atDark_borderHighlight}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource atDark_borderHighlight}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="LabelListBoxHeader" TargetType="Label">
    <Setter Property="Background" Value="{StaticResource atDark_bgDark}"/>
    <Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
    <Setter Property="BorderThickness" Value="1,1,1,0"/>
    <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
    <Setter Property="FontWeight" Value="Light"/>
    <Setter Property="Height" Value="25"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>

  <Style TargetType="ListBox">
    <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
    <Setter Property="Background" Value="{StaticResource atDark_bgLight}"/>
    <Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>

  <Style TargetType="ListBoxItem">
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="true" />
          <Condition Property="Selector.IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </MultiTrigger>
    </Style.Triggers>
    <Style.Resources>
      <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}"/>
    </Style.Resources>
  </Style>
  
</ResourceDictionary>
