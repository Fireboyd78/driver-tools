<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="http://helixtoolkit.codeplex.com"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
                    mc:Ignorable="d">

	<SolidColorBrush x:Key="atDark_fg" Color="#FFC8C8C8"/>
    <SolidColorBrush x:Key="atDark_textHighlight" Color="#FFF0F0F0"/>
	<SolidColorBrush x:Key="atDark_bgLight" Color="#43000000"/>
	<SolidColorBrush x:Key="atDark_bgDark" Color="#48000000"/>
	<SolidColorBrush x:Key="atDark_bgDarkHighlight" Color="#12FFFFFF"/>
	<SolidColorBrush x:Key="atDark_bgDarkActive" Color="#04FFFFFF"/>
	<SolidColorBrush x:Key="atDark_bgDarkActiveHighlight" Color="#16FFFFFF"/>
	<SolidColorBrush x:Key="atDark_border" Color="Gold" />
	<SolidColorBrush x:Key="atDark_borderHighlight" Color="LightGray" />

	<Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
		<Setter Property="Background" Value="{StaticResource atDark_bgDark}"/>
		<Setter Property="BorderBrush" Value="Gold"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Border.CornerRadius" Value="0"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
		<Setter Property="Height" Value="22"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="mainBorder"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter ContentSource="Content"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="mainBorder" Property="Background" Value="{StaticResource atDark_bgDarkHighlight}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="mainBorder" Property="Background" Value="{StaticResource atDark_bgDarkActive}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource atDark_bgDark}"/>
        <Setter Property="BorderBrush" Value="Gold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Border.CornerRadius" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="mainBorder"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentSource="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource atDark_bgDarkHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource atDark_bgDarkActive}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#28FFFFFF"/>
                            <Setter Property="BorderBrush" Value="{StaticResource atDark_fg}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#16FFFFFF"/>
                            <Setter Property="BorderBrush" Value="#16FFFFFF"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#32FFFFFF"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LODBox">
        <Style.Resources>
            <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
            </Style>
            <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Border">
		<Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
	</Style>

	<Style TargetType="TextBox">
		<Setter Property="Background" Value="{StaticResource atDark_bgLight}"/>
		<Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
		<Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Padding="2">
						<ScrollViewer Margin="0"
                          x:Name="PART_ContentHost" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource atDark_borderHighlight}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource atDark_borderHighlight}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="SeeThru">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderBrush" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Foreground" Value="{StaticResource atDark_fg}"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
    </Style>

	<Style x:Key="LabelListBoxHeader" TargetType="Label">
		<Setter Property="Background" Value="{StaticResource atDark_bgDark}"/>
		<Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
		<Setter Property="BorderThickness" Value="1,1,1,0"/>
		<Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
		<Setter Property="FontWeight" Value="Light"/>
		<Setter Property="Height" Value="25"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

    <Style x:Key="BorderListBox" TargetType="ListBox">
		<Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
		<Setter Property="Background" Value="{StaticResource atDark_bgLight}"/>
		<Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<Style TargetType="ListBoxItem">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray" Opacity="0.19"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightGray" Opacity="0.19"/>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource atDark_fg}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource atDark_fg}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TreeViewItem">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray" Opacity="0.19"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightGray" Opacity="0.19"/>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource atDark_fg}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Foreground" Value="{StaticResource atDark_fg}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource atDark_fg}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource atDark_border}"/>
                            <Setter Property="Background" Value="{StaticResource atDark_bgLight}"/>
                        </Style>
                        
                        <Style TargetType="ListBox" BasedOn="{StaticResource SeeThru}"/>
                        <Style TargetType="ListView" BasedOn="{StaticResource SeeThru}"/>
                        <Style TargetType="TextBox" BasedOn="{StaticResource SeeThru}"/>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource SeeThru}"/>
                        <Style TargetType="TreeView" BasedOn="{StaticResource SeeThru}"/>
                    </ControlTemplate.Resources>
                    
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Content="{TemplateBinding Header}" Padding="0" Margin="0" Style="{StaticResource LabelListBoxHeader}"/>
                        <Border Grid.Row="1">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Stretch"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FF404040" Offset="0.25"/>
                    <GradientStop Color="#FF202020" Offset="0.8"/>
                    <GradientStop Color="#FF101010" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource atDark_fg}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
    </Style>

    <ControlTemplate x:Key="atDark_menuItemHeader" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="OuterBorder"/>
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
            <Rectangle x:Name="InnerBorder" Margin="2"/>
            <DockPanel>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Path x:Name="GlyphPanel" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                    <Border x:Name="SubMenuBorder" BorderBrush="#353535" BorderThickness="1" Background="#FF252525">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Margin="1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding ElementName=SubMenuBorder, Path=Background}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="#FF1D1D1D" HorizontalAlignment="Left" Margin="1,0" Width="28"/>
                                <Rectangle Fill="#FF353535" HorizontalAlignment="Left" Margin="29,0,0,0" Width="1"/>
                                <Rectangle Fill="#FF202020" HorizontalAlignment="Left" Margin="30,0,0,0" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="4,2,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FF353535"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#FF353535"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Stroke" TargetName="Bg" Value="Transparent"/>
                <Setter Property="Fill" TargetName="Bg" Value="#FF1D1D1D"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Stroke" TargetName="Bg" Value="Transparent"/>
                <Setter Property="Fill" TargetName="Bg" Value="#FF1D1D1D"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF848589"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="atDark_subMenuItem" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
            <Rectangle x:Name="InnerBorder" Margin="1"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Border x:Name="GlyphPanel" BorderBrush="#FFCDD3E6" BorderThickness="1" Background="#FFE6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
                    <Path x:Name="Glyph" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FF0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
                </Border>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Fill" TargetName="Bg" Value="#FF121212"/>
                <Setter Property="Stroke" TargetName="Bg" Value="#7FFFD700"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                <Setter Property="Background" TargetName="GlyphPanel" Value="#FFEEE9E9"/>
                <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FFDBD6D6"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF848589"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="atDark_menuItem" TargetType="MenuItem">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template" Value="{DynamicResource atDark_menuItemHeader}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem">
                    <Setter Property="Template" Value="{DynamicResource atDark_subMenuItem}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="atDark_menuSep" TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid Margin="0,6,0,4" SnapsToDevicePixels="True" UseLayoutRounding="False">
                        <Rectangle Fill="#FF202020" Height="1" Margin="30,0,1,1"/>
                        <Rectangle Fill="#FF353535" Height="1" Margin="30,1,1,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
