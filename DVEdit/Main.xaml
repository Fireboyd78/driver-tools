<Window x:Class="DVEdit.Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:DVEdit"
        Title="DVEdit"
        Height="569"
        Width="812"
        WindowStartupLocation="CenterScreen">

  <Window.Resources>
    <local:TreeViewLineConverter x:Key="LineConverter"/>
    <local:UIntMagicConverter x:Key="MagicConverter"/>
    <local:UIntToHexConverter x:Key="HexConverter"/>

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <!--=================================================================
      TreeViewItem
  ==================================================================-->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid
              Width="15"
              Height="13"
              Background="White">
              <Path x:Name="ExpandPath"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Fill="{StaticResource GlyphBrush}"
                Data="M 4 0 L 8 4 L 4 8 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsChecked"
                   Value="True">
                <Setter Property="Data"
                    TargetName="ExpandPath"
                    Value="M 0 4 L 8 4 L 4 8 Z"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Border>
              <Rectangle Margin="0,0,0,0"
                     StrokeThickness="5"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     Opacity="0"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}"
         TargetType="{x:Type TreeViewItem}">
      <Setter Property="Background"
          Value="Transparent"/>
      <Setter Property="HorizontalContentAlignment"
          Value="{Binding Path=HorizontalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="VerticalContentAlignment"
          Value="{Binding Path=VerticalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="Padding"
          Value="1,0,0,0"/>
      <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="FocusVisualStyle"
          Value="{StaticResource TreeViewItemFocusVisual}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TreeViewItem}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="8"
                          Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
              </Grid.RowDefinitions>

              <!-- Connecting Lines -->
              <Rectangle x:Name="HorLn" Height="1" Stroke="#8888"  Margin="10,0,0,0" SnapsToDevicePixels="true"/>
              <Rectangle x:Name="VerLn" Width="1" Stroke="#8888" Grid.RowSpan="2" SnapsToDevicePixels="true"/>
              <ToggleButton x:Name="Expander"
                      Style="{StaticResource ExpandCollapseToggleStyle}"
                      IsChecked="{Binding Path=IsExpanded,
                              RelativeSource={RelativeSource TemplatedParent}}"
                      ClickMode="Press"/>
              <Border Name="Bd"
                  Grid.Column="1"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
                <ContentPresenter x:Name="PART_Header"
                          ContentSource="Header"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
              </Border>
              <ItemsPresenter x:Name="ItemsHost"
                      Grid.Row="1"
                      Grid.Column="1"
                      Grid.ColumnSpan="2"/>
            </Grid>
            <ControlTemplate.Triggers>

              <!-- This trigger changes the connecting lines if the item is the last in the list -->
              <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                <Setter TargetName="VerLn"
                    Property="Height"
                    Value="6"/>
                <Setter TargetName="VerLn"
                    Property="VerticalAlignment"
                    Value="Top"/>
              </DataTrigger>
              <Trigger Property="IsExpanded"
                   Value="false">
                <Setter TargetName="ItemsHost"
                    Property="Visibility"
                    Value="Collapsed"/>
              </Trigger>
              <Trigger Property="HasItems"
                   Value="false">
                <Setter TargetName="Expander"
                    Property="Visibility"
                    Value="Hidden"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader"
                         Value="false"/>
                  <Condition Property="Width"
                         Value="Auto"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                    Property="MinWidth"
                    Value="75"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasHeader"
                         Value="false"/>
                  <Condition Property="Height"
                         Value="Auto"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header"
                    Property="MinHeight"
                    Value="19"/>
              </MultiTrigger>
              <Trigger Property="IsSelected"
                   Value="true">
                <Setter TargetName="Bd"
                    Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected"
                         Value="true"/>
                  <Condition Property="IsSelectionActive"
                         Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd"
                    Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              </MultiTrigger>
              <Trigger Property="IsEnabled"
                   Value="false">
                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="tbS" TargetType="{x:Type TextBlock}">
      <Style.Triggers>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
          <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
  </Window.Resources>

  <Grid>
    <DockPanel Name="dockPanel1" VerticalAlignment="Top">
      <Menu Name="menu1" 
                  DockPanel.Dock="Top"
                  Height="21"
                  BorderBrush="#FFAAAAAA"
                  BorderThickness="0,0,0,1">
        <Menu.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFAFAFA" Offset="0" />
            <GradientStop Color="#FFE8E8E8" Offset="1" />
            <GradientStop Color="#FFEAEAEA" Offset="0.5" />
          </LinearGradientBrush>
        </Menu.Background>

        <MenuItem Name="file" Header="File">
          <MenuItem Name="open"  Header="Open" />
          <MenuItem Name="close" Header="Close" />
        </MenuItem>
      </Menu>
    </DockPanel>
    <Grid Name="grid1"
              Height="Auto"
              HorizontalAlignment="Stretch"
              Margin="0,21,0,0"
              VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="490*" MaxWidth="Infinity" />
        <ColumnDefinition Width="*" MinWidth="350" MaxWidth="500" />
      </Grid.ColumnDefinitions>
      <Grid.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="White" Offset="0" />
          <GradientStop Color="#FFD1D1D1" Offset="1" />
        </LinearGradientBrush>
      </Grid.Background>
      <DockPanel Name="DPMidLeft"
                 Height="Auto"
                 HorizontalAlignment="Left">
      </DockPanel>
      <TreeView Name="cNodes"
                Height="497"
                Margin="4,0"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Top"
                HorizontalContentAlignment="Stretch" SelectedItemChanged="cNodes_SelectedItemChanged" />
      <xctk:PropertyGrid Name="PropGrid" 
                         HorizontalAlignment="Stretch" 
                         VerticalAlignment="Stretch"
                         BorderBrush="#FF9D9D9D"
                         BorderThickness="1,0,0,0"
                         HorizontalContentAlignment="Left"
                         IsReadOnly="True"
                         FontSize="12"
                         Grid.Column="1" Margin="3,0,0,0" NameColumnWidth="125">
        <xctk:PropertyGrid.Background>
          <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FFEFEFEF" Offset="0" />
            <GradientStop Color="#FFB7B7B7" Offset="1" />
          </LinearGradientBrush>
        </xctk:PropertyGrid.Background>
        <xctk:PropertyGrid.EditorDefinitions>
          
          <xctk:EditorDefinition>
            <xctk:EditorDefinition.PropertiesDefinitions>
              <xctk:PropertyDefinition Name="Magic" />
            </xctk:EditorDefinition.PropertiesDefinitions>
            <xctk:EditorDefinition.EditorTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Value, Converter={StaticResource MagicConverter}}" Padding="4,0,0,0" Style="{DynamicResource tbS}" />
              </DataTemplate>
            </xctk:EditorDefinition.EditorTemplate>
          </xctk:EditorDefinition>

          <xctk:EditorDefinition>
            <xctk:EditorDefinition.PropertiesDefinitions>
              <xctk:PropertyDefinition Name="BaseOffset" />
              <xctk:PropertyDefinition Name="Offset" />
              <xctk:PropertyDefinition Name="Size" />
            </xctk:EditorDefinition.PropertiesDefinitions>
            <xctk:EditorDefinition.EditorTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Value, Converter={StaticResource HexConverter}}"
                           Padding="4,0,0,0" Style="{DynamicResource tbS}"/>
              </DataTemplate>
            </xctk:EditorDefinition.EditorTemplate>
          </xctk:EditorDefinition>

        </xctk:PropertyGrid.EditorDefinitions>
      </xctk:PropertyGrid>
      <GridSplitter HorizontalAlignment="Left" Name="gridSplitter1" VerticalAlignment="Stretch" Width="3" Grid.Column="1" Margin="0" />
    </Grid>
  </Grid>
</Window>
